//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.Conf.Dota
{
public sealed partial class BuildingLevelUpConfigRecord :  Bright.Config.BeanBase 
{
    public BuildingLevelUpConfigRecord(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        IsValid = _buf.ReadBool();
        BattleScore = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Bundles = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Bundles.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);StarUpInfo = new System.Collections.Generic.List<Dota.UnitStarUpConfigBean>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Dota.UnitStarUpConfigBean _e0;  _e0 = Dota.UnitStarUpConfigBean.DeserializeUnitStarUpConfigBean(_buf); StarUpInfo.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);TalentInfo = new System.Collections.Generic.List<Dota.UnitTalentInfoBean>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Dota.UnitTalentInfoBean _e0;  _e0 = Dota.UnitTalentInfoBean.DeserializeUnitTalentInfoBean(_buf); TalentInfo.Add(_e0);}}
        PostInit();
    }

    public static BuildingLevelUpConfigRecord DeserializeBuildingLevelUpConfigRecord(ByteBuf _buf)
    {
        return new Dota.BuildingLevelUpConfigRecord(_buf);
    }

    /// <summary>
    /// 主键
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 是否启用
    /// </summary>
    public bool IsValid { get; private set; }
    /// <summary>
    /// 初始战力
    /// </summary>
    public int BattleScore { get; private set; }
    /// <summary>
    /// 套装
    /// </summary>
    public System.Collections.Generic.List<int> Bundles { get; private set; }
    public System.Collections.Generic.List<Dota.UnitStarUpConfigBean> StarUpInfo { get; private set; }
    public System.Collections.Generic.List<Dota.UnitTalentInfoBean> TalentInfo { get; private set; }

    public const int __ID__ = -2126859000;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in StarUpInfo) { _e?.Resolve(_tables); }
        foreach(var _e in TalentInfo) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in StarUpInfo) { _e?.TranslateText(translator); }
        foreach(var _e in TalentInfo) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "IsValid:" + IsValid + ","
        + "BattleScore:" + BattleScore + ","
        + "Bundles:" + Bright.Common.StringUtil.CollectionToString(Bundles) + ","
        + "StarUpInfo:" + Bright.Common.StringUtil.CollectionToString(StarUpInfo) + ","
        + "TalentInfo:" + Bright.Common.StringUtil.CollectionToString(TalentInfo) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}