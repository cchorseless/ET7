//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace cfg.Item
{
public sealed partial class ItemPrizePoolConfigRecord :  Bright.Config.BeanBase 
{
    public ItemPrizePoolConfigRecord(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Itempool = new System.Collections.Generic.List<Item.ItemPrizePoolBean>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Item.ItemPrizePoolBean _e0;  _e0 = Item.ItemPrizePoolBean.DeserializeItemPrizePoolBean(_buf); Itempool.Add(_e0);}}
        PostInit();
    }

    public static ItemPrizePoolConfigRecord DeserializeItemPrizePoolConfigRecord(ByteBuf _buf)
    {
        return new Item.ItemPrizePoolConfigRecord(_buf);
    }

    /// <summary>
    /// 池子id
    /// </summary>
    public int Id { get; private set; }
    public System.Collections.Generic.List<Item.ItemPrizePoolBean> Itempool { get; private set; }

    public const int __ID__ = 504200243;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in Itempool) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in Itempool) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Itempool:" + Bright.Common.StringUtil.CollectionToString(Itempool) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}