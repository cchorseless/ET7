//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace cfg.Rank
{
public sealed partial class RankPrizeConfigRecord :  Bright.Config.BeanBase 
{
    public RankPrizeConfigRecord(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SeasonPrizeItemGroup = new System.Collections.Generic.List<Item.ItemGroupBean>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Item.ItemGroupBean _e0;  _e0 = Item.ItemGroupBean.DeserializeItemGroupBean(_buf); SeasonPrizeItemGroup.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);DailyPrizeItemGroup = new System.Collections.Generic.List<Item.ItemGroupBean>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Item.ItemGroupBean _e0;  _e0 = Item.ItemGroupBean.DeserializeItemGroupBean(_buf); DailyPrizeItemGroup.Add(_e0);}}
        PostInit();
    }

    public static RankPrizeConfigRecord DeserializeRankPrizeConfigRecord(ByteBuf _buf)
    {
        return new Rank.RankPrizeConfigRecord(_buf);
    }

    /// <summary>
    /// 排行id
    /// </summary>
    public int Id { get; private set; }
    public System.Collections.Generic.List<Item.ItemGroupBean> SeasonPrizeItemGroup { get; private set; }
    public System.Collections.Generic.List<Item.ItemGroupBean> DailyPrizeItemGroup { get; private set; }

    public const int __ID__ = -832059305;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in SeasonPrizeItemGroup) { _e?.Resolve(_tables); }
        foreach(var _e in DailyPrizeItemGroup) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in SeasonPrizeItemGroup) { _e?.TranslateText(translator); }
        foreach(var _e in DailyPrizeItemGroup) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SeasonPrizeItemGroup:" + Bright.Common.StringUtil.CollectionToString(SeasonPrizeItemGroup) + ","
        + "DailyPrizeItemGroup:" + Bright.Common.StringUtil.CollectionToString(DailyPrizeItemGroup) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}